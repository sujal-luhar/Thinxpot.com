[{"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\index.js":"1","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\reportWebVitals.js":"2","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\App.js":"3","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Auth\\Login.js":"5","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Auth\\Register.js":"6","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Navbar\\NavbarIn.js":"7","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\pages\\home\\Home.js":"8"},{"size":636,"mtime":1693728103762,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1693569956176,"results":"11","hashOfConfig":"10"},{"size":1031,"mtime":1693832699684,"results":"12","hashOfConfig":"10"},{"size":4897,"mtime":1693831767236,"results":"13","hashOfConfig":"10"},{"size":2987,"mtime":1693831251776,"results":"14","hashOfConfig":"10"},{"size":3317,"mtime":1693831269987,"results":"15","hashOfConfig":"10"},{"size":7548,"mtime":1693833885045,"results":"16","hashOfConfig":"10"},{"size":2124,"mtime":1693838262280,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1pg6lvc",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\index.js",[],[],[],"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\App.js",["46"],[],"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Navbar\\Navbar.js",["47","48"],[],"import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Navbar,\r\n  MobileNav,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Card,\r\n} from \"@material-tailwind/react\";\r\n \r\nexport default function StickyNavbar() {\r\n  const [openNav, setOpenNav] = React.useState(false);\r\n \r\n  React.useEffect(() => {\r\n    window.addEventListener(\r\n      \"resize\",\r\n      () => window.innerWidth >= 960 && setOpenNav(false)\r\n    );\r\n  }, []);\r\n \r\n  const navList = (\r\n    <ul className=\"mb-4 mt-2 flex flex-col gap-2 lg:mb-0 lg:mt0 lg:flex-row lg:items-center lg:gap-6\">\r\n      <Typography\r\n        as=\"li\"\r\n        variant=\"small\"\r\n        color=\"blue-gray\"\r\n        className=\"p-1 font-normal\"\r\n      >\r\n        <a href=\"#\" className=\"flex items-center\">\r\n        <Link to=\"/register\">Register</Link>\r\n        </a>\r\n      </Typography>\r\n    </ul>\r\n  );\r\n \r\n  return (\r\n    <div className=\"max-h-[768px] w-screen\">\r\n      <Navbar className=\"sticky top-4 z-10 h-max max-w-full rounded-none py-2 px-4 lg:px-8 lg:py-4\">\r\n        <div className=\"flex items-center justify-between text-blue-gray-900\">\r\n          <Typography\r\n            as=\"a\"\r\n            href=\"#\"\r\n            className=\"mr-4 cursor-pointer py-1.5 font-medium\"\r\n          >\r\n            Thinxpot\r\n          </Typography>\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"mr-4 hidden lg:block\">{navList}</div>\r\n            <Button\r\n              variant=\"gradient\"\r\n              size=\"sm\"\r\n              className=\"hidden lg:inline-block\"\r\n            >\r\n              <span><Link to=\"/login\">Sign In</Link></span>\r\n            </Button>\r\n            <IconButton\r\n              variant=\"text\"\r\n              className=\"ml-auto h-6 w-6 text-inherit hover:bg-transparent focus:bg-transparent active:bg-transparent lg:hidden\"\r\n              ripple={false}\r\n              onClick={() => setOpenNav(!openNav)}\r\n            >\r\n              {openNav ? (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  className=\"h-6 w-6\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth={2}\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    d=\"M6 18L18 6M6 6l12 12\"\r\n                  />\r\n                </svg>\r\n              ) : (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-6 w-6\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth={2}\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    d=\"M4 6h16M4 12h16M4 18h16\"\r\n                  />\r\n                </svg>\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <MobileNav open={openNav}>\r\n          {navList}\r\n          <Button variant=\"gradient\" size=\"sm\" fullWidth className=\"mb-2\">\r\n          <span><Link to=\"/login\">Sign In</Link></span>\r\n          </Button>\r\n        </MobileNav>\r\n      </Navbar>\r\n      {/* <div className=\"mx-auto max-w-screen-md py-12\">\r\n        <Card className=\"mb-12 overflow-hidden\">\r\n          <img\r\n            alt=\"nature\"\r\n            className=\"h-[32rem] w-full object-cover object-center\"\r\n            src=\"https://images.unsplash.com/photo-1485470733090-0aae1788d5af?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2717&q=80\"\r\n          />\r\n        </Card>\r\n        <Typography variant=\"h2\" color=\"blue-gray\" className=\"mb-2\">\r\n          What is Material Tailwind\r\n        </Typography>\r\n        <Typography color=\"gray\" className=\"font-normal\">\r\n          Can you help me out? you will get a lot of free exposure doing this\r\n          can my website be in english?. There is too much white space do less\r\n          with more, so that will be a conversation piece can you rework to make\r\n          the pizza look more delicious other agencies charge much lesser can\r\n          you make the blue bluer?. I think we need to start from scratch can my\r\n          website be in english?, yet make it sexy i&apos;ll pay you in a week\r\n          we don&apos;t need to pay upfront i hope you understand can you make\r\n          it stand out more?. Make the font bigger can you help me out? you will\r\n          get a lot of free exposure doing this that&apos;s going to be a chunk\r\n          of change other agencies charge much lesser. Are you busy this\r\n          weekend? I have a new project with a tight deadline that&apos;s going\r\n          to be a chunk of change. There are more projects lined up charge extra\r\n          the next time.\r\n        </Typography>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Auth\\Login.js",["49","50","51","52","53"],[],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Card,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Typography,\r\n} from \"@material-tailwind/react\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Make a POST request to your backend for login\r\n    fetch('/api/users/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          // Login was successful, you can redirect the user or update the UI\r\n          console.log('Login successful');\r\n        } else {\r\n          // Handle login error, show an error message, etc.\r\n          console.error('Login failed');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Login error:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    // <div>\r\n    //   <h2>Login</h2>\r\n    //   <form>\r\n    //     <input\r\n    //       type=\"email\"\r\n    //       placeholder=\"Email\"\r\n    //       value={email}\r\n    //       onChange={(e) => setEmail(e.target.value)}\r\n    //     />\r\n    //     <input\r\n    //       type=\"password\"\r\n    //       placeholder=\"Password\"\r\n    //       value={password}\r\n    //       onChange={(e) => setPassword(e.target.value)}\r\n    //     />\r\n    //     <button type=\"button\" onClick={handleLogin}>\r\n    //       Login\r\n    //     </button>\r\n    //   </form>\r\n    // </div>\r\n    <Card color=\"transparent\" className=\"flex items-center justify-center h-[80vh]\" shadow={false}>\r\n    <Typography variant=\"h3\" color=\"blue-gray\">\r\n      Sign In\r\n    </Typography>\r\n    <Typography color=\"gray\" className=\"mt-1 font-normal\">\r\n      Enter your details to login.\r\n    </Typography>\r\n    <form className=\"mt-8 mb-2 w-80 max-w-screen-lg sm:w-96\">\r\n      <div className=\"mb-4 flex flex-col gap-6\">\r\n        <Input size=\"lg\" label=\"Email\" />\r\n        <Input type=\"password\" size=\"lg\" label=\"Password\" />\r\n      </div>\r\n      <Checkbox\r\n        label={\r\n          <Typography\r\n            variant=\"small\"\r\n            color=\"gray\"\r\n            className=\"flex items-center font-normal\"\r\n          >\r\n            I agree the\r\n            <a\r\n              href=\"#\"\r\n              className=\"font-medium transition-colors hover:text-gray-900\"\r\n            >\r\n              &nbsp;Terms and Conditions\r\n            </a>\r\n          </Typography>\r\n        }\r\n        containerProps={{ className: \"-ml-2.5\" }}\r\n      />\r\n      <Button className=\"mt-6\" fullWidth>\r\n        Sign In\r\n      </Button>\r\n      <Typography color=\"gray\" className=\"mt-4 text-center font-normal\">\r\n        Don't have an account?{\" \"}\r\n        <a href=\"#\" className=\"font-medium text-gray-900\">\r\n        <Link to=\"/register\">Register</Link>\r\n        </a>\r\n      </Typography>\r\n    </form>\r\n  </Card>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Auth\\Register.js",["54","55","56","57","58","59"],[],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Card,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Typography,\r\n} from \"@material-tailwind/react\";\r\n\r\nfunction Register() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegister = () => {\r\n    // Make a POST request to your backend for registration\r\n    fetch('/api/users/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name, email, password }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          // Registration was successful, you can redirect the user or update the UI\r\n          console.log('Registration successful');\r\n        } else {\r\n          // Handle registration error, show an error message, etc.\r\n          console.error('Registration failed');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Registration error:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    // <div>\r\n    //   <h2>Register</h2>\r\n    //   <form>\r\n    //     <input\r\n    //       type=\"text\"\r\n    //       placeholder=\"Name\"\r\n    //       value={name}\r\n    //       onChange={(e) => setName(e.target.value)}\r\n    //     />\r\n    //     <input\r\n    //       type=\"email\"\r\n    //       placeholder=\"Email\"\r\n    //       value={email}\r\n    //       onChange={(e) => setEmail(e.target.value)}\r\n    //     />\r\n    //     <input\r\n    //       type=\"password\"\r\n    //       placeholder=\"Password\"\r\n    //       value={password}\r\n    //       onChange={(e) => setPassword(e.target.value)}\r\n    //     />\r\n    //     <button type=\"button\" onClick={handleRegister}>\r\n    //       Register\r\n    //     </button>\r\n    //   </form>\r\n    // </div>\r\n    <Card color=\"transparent\" className=\"flex items-center justify-center h-[80vh]\" shadow={false}>\r\n    <Typography variant=\"h3\" color=\"blue-gray\">\r\n      Sign Up\r\n    </Typography>\r\n    <Typography color=\"gray\" className=\"mt-1 font-normal\">\r\n      Enter your details to register.\r\n    </Typography>\r\n    <form className=\"mt-8 mb-2 w-80 max-w-screen-lg sm:w-96\">\r\n      <div className=\"mb-4 flex flex-col gap-6\">\r\n        <Input size=\"lg\" label=\"Name\" />\r\n        <Input size=\"lg\" label=\"Email\" />\r\n        <Input type=\"password\" size=\"lg\" label=\"Password\" />\r\n      </div>\r\n      <Checkbox\r\n        label={\r\n          <Typography\r\n            variant=\"small\"\r\n            color=\"gray\"\r\n            className=\"flex items-center font-normal\"\r\n          >\r\n            I agree the\r\n            <a\r\n              href=\"#\"\r\n              className=\"font-medium transition-colors hover:text-gray-900\"\r\n            >\r\n              &nbsp;Terms and Conditions\r\n            </a>\r\n          </Typography>\r\n        }\r\n        containerProps={{ className: \"-ml-2.5\" }}\r\n      />\r\n      <Button className=\"mt-6\" fullWidth>\r\n        Register\r\n      </Button>\r\n      <Typography color=\"gray\" className=\"mt-4 text-center font-normal\">\r\n        Already have an account?{\" \"}\r\n        <a href=\"#\" className=\"font-medium text-gray-900\">\r\n        <Link to=\"/login\">Sign In</Link>\r\n        </a>\r\n      </Typography>\r\n    </form>\r\n  </Card>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Navbar\\NavbarIn.js",["60","61","62","63"],[],"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\pages\\home\\Home.js",["64","65"],[],{"ruleId":"66","severity":1,"message":"67","line":3,"column":50,"nodeType":"68","messageId":"69","endLine":3,"endColumn":54},{"ruleId":"66","severity":1,"message":"70","line":9,"column":3,"nodeType":"68","messageId":"69","endLine":9,"endColumn":7},{"ruleId":"71","severity":1,"message":"72","line":30,"column":9,"nodeType":"73","endLine":30,"endColumn":51},{"ruleId":"66","severity":1,"message":"74","line":12,"column":17,"nodeType":"68","messageId":"69","endLine":12,"endColumn":25},{"ruleId":"66","severity":1,"message":"75","line":13,"column":20,"nodeType":"68","messageId":"69","endLine":13,"endColumn":31},{"ruleId":"66","severity":1,"message":"76","line":15,"column":9,"nodeType":"68","messageId":"69","endLine":15,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":79,"column":13,"nodeType":"73","endLine":82,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":94,"column":9,"nodeType":"73","endLine":94,"endColumn":59},{"ruleId":"66","severity":1,"message":"77","line":12,"column":16,"nodeType":"68","messageId":"69","endLine":12,"endColumn":23},{"ruleId":"66","severity":1,"message":"74","line":13,"column":17,"nodeType":"68","messageId":"69","endLine":13,"endColumn":25},{"ruleId":"66","severity":1,"message":"75","line":14,"column":20,"nodeType":"68","messageId":"69","endLine":14,"endColumn":31},{"ruleId":"66","severity":1,"message":"78","line":16,"column":9,"nodeType":"68","messageId":"69","endLine":16,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":87,"column":13,"nodeType":"73","endLine":90,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":102,"column":9,"nodeType":"73","endLine":102,"endColumn":59},{"ruleId":"66","severity":1,"message":"67","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"66","severity":1,"message":"79","line":17,"column":3,"nodeType":"68","messageId":"69","endLine":17,"endColumn":22},{"ruleId":"66","severity":1,"message":"80","line":24,"column":3,"nodeType":"68","messageId":"69","endLine":24,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":135,"column":5,"nodeType":"73","endLine":135,"endColumn":29},{"ruleId":"81","severity":1,"message":"82","line":50,"column":4,"nodeType":"83","endLine":50,"endColumn":6,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":77,"column":10,"nodeType":"73","endLine":77,"endColumn":61},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'handleLogin' is assigned a value but never used.","'setName' is assigned a value but never used.","'handleRegister' is assigned a value but never used.","'CubeTransparentIcon' is defined but never used.","'LifebuoyIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.","ArrayExpression",["87"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"88","fix":"89"},"Update the dependencies array to be: [items]",{"range":"90","text":"91"},[1172,1174],"[items]"]