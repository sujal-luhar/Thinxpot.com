[{"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\index.js":"1","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\reportWebVitals.js":"2","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\App.js":"3","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Auth\\Login.js":"5","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Auth\\Register.js":"6","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Navbar\\NavbarIn.js":"7","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\pages\\home\\Home.js":"8","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Posts\\PostDetail.js":"9"},{"size":636,"mtime":1693728103762,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1693569956176,"results":"12","hashOfConfig":"11"},{"size":1183,"mtime":1693909659621,"results":"13","hashOfConfig":"11"},{"size":4927,"mtime":1693909167398,"results":"14","hashOfConfig":"11"},{"size":2987,"mtime":1693831251776,"results":"15","hashOfConfig":"11"},{"size":3317,"mtime":1693831269987,"results":"16","hashOfConfig":"11"},{"size":7548,"mtime":1693833885045,"results":"17","hashOfConfig":"11"},{"size":2256,"mtime":1693841509602,"results":"18","hashOfConfig":"11"},{"size":5007,"mtime":1693911510684,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1pg6lvc",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\index.js",[],[],[],"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\App.js",["51"],[],"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Navbar\\Navbar.js",["52","53"],[],"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Auth\\Login.js",["54","55","56","57","58"],[],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Card,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Typography,\r\n} from \"@material-tailwind/react\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Make a POST request to your backend for login\r\n    fetch('/api/users/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          // Login was successful, you can redirect the user or update the UI\r\n          console.log('Login successful');\r\n        } else {\r\n          // Handle login error, show an error message, etc.\r\n          console.error('Login failed');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Login error:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    // <div>\r\n    //   <h2>Login</h2>\r\n    //   <form>\r\n    //     <input\r\n    //       type=\"email\"\r\n    //       placeholder=\"Email\"\r\n    //       value={email}\r\n    //       onChange={(e) => setEmail(e.target.value)}\r\n    //     />\r\n    //     <input\r\n    //       type=\"password\"\r\n    //       placeholder=\"Password\"\r\n    //       value={password}\r\n    //       onChange={(e) => setPassword(e.target.value)}\r\n    //     />\r\n    //     <button type=\"button\" onClick={handleLogin}>\r\n    //       Login\r\n    //     </button>\r\n    //   </form>\r\n    // </div>\r\n    <Card color=\"transparent\" className=\"flex items-center justify-center h-[80vh]\" shadow={false}>\r\n    <Typography variant=\"h3\" color=\"blue-gray\">\r\n      Sign In\r\n    </Typography>\r\n    <Typography color=\"gray\" className=\"mt-1 font-normal\">\r\n      Enter your details to login.\r\n    </Typography>\r\n    <form className=\"mt-8 mb-2 w-80 max-w-screen-lg sm:w-96\">\r\n      <div className=\"mb-4 flex flex-col gap-6\">\r\n        <Input size=\"lg\" label=\"Email\" />\r\n        <Input type=\"password\" size=\"lg\" label=\"Password\" />\r\n      </div>\r\n      <Checkbox\r\n        label={\r\n          <Typography\r\n            variant=\"small\"\r\n            color=\"gray\"\r\n            className=\"flex items-center font-normal\"\r\n          >\r\n            I agree the\r\n            <a\r\n              href=\"#\"\r\n              className=\"font-medium transition-colors hover:text-gray-900\"\r\n            >\r\n              &nbsp;Terms and Conditions\r\n            </a>\r\n          </Typography>\r\n        }\r\n        containerProps={{ className: \"-ml-2.5\" }}\r\n      />\r\n      <Button className=\"mt-6\" fullWidth>\r\n        Sign In\r\n      </Button>\r\n      <Typography color=\"gray\" className=\"mt-4 text-center font-normal\">\r\n        Don't have an account?{\" \"}\r\n        <a href=\"#\" className=\"font-medium text-gray-900\">\r\n        <Link to=\"/register\">Register</Link>\r\n        </a>\r\n      </Typography>\r\n    </form>\r\n  </Card>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Auth\\Register.js",["59","60","61","62","63","64"],[],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Card,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Typography,\r\n} from \"@material-tailwind/react\";\r\n\r\nfunction Register() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegister = () => {\r\n    // Make a POST request to your backend for registration\r\n    fetch('/api/users/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name, email, password }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          // Registration was successful, you can redirect the user or update the UI\r\n          console.log('Registration successful');\r\n        } else {\r\n          // Handle registration error, show an error message, etc.\r\n          console.error('Registration failed');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Registration error:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    // <div>\r\n    //   <h2>Register</h2>\r\n    //   <form>\r\n    //     <input\r\n    //       type=\"text\"\r\n    //       placeholder=\"Name\"\r\n    //       value={name}\r\n    //       onChange={(e) => setName(e.target.value)}\r\n    //     />\r\n    //     <input\r\n    //       type=\"email\"\r\n    //       placeholder=\"Email\"\r\n    //       value={email}\r\n    //       onChange={(e) => setEmail(e.target.value)}\r\n    //     />\r\n    //     <input\r\n    //       type=\"password\"\r\n    //       placeholder=\"Password\"\r\n    //       value={password}\r\n    //       onChange={(e) => setPassword(e.target.value)}\r\n    //     />\r\n    //     <button type=\"button\" onClick={handleRegister}>\r\n    //       Register\r\n    //     </button>\r\n    //   </form>\r\n    // </div>\r\n    <Card color=\"transparent\" className=\"flex items-center justify-center h-[80vh]\" shadow={false}>\r\n    <Typography variant=\"h3\" color=\"blue-gray\">\r\n      Sign Up\r\n    </Typography>\r\n    <Typography color=\"gray\" className=\"mt-1 font-normal\">\r\n      Enter your details to register.\r\n    </Typography>\r\n    <form className=\"mt-8 mb-2 w-80 max-w-screen-lg sm:w-96\">\r\n      <div className=\"mb-4 flex flex-col gap-6\">\r\n        <Input size=\"lg\" label=\"Name\" />\r\n        <Input size=\"lg\" label=\"Email\" />\r\n        <Input type=\"password\" size=\"lg\" label=\"Password\" />\r\n      </div>\r\n      <Checkbox\r\n        label={\r\n          <Typography\r\n            variant=\"small\"\r\n            color=\"gray\"\r\n            className=\"flex items-center font-normal\"\r\n          >\r\n            I agree the\r\n            <a\r\n              href=\"#\"\r\n              className=\"font-medium transition-colors hover:text-gray-900\"\r\n            >\r\n              &nbsp;Terms and Conditions\r\n            </a>\r\n          </Typography>\r\n        }\r\n        containerProps={{ className: \"-ml-2.5\" }}\r\n      />\r\n      <Button className=\"mt-6\" fullWidth>\r\n        Register\r\n      </Button>\r\n      <Typography color=\"gray\" className=\"mt-4 text-center font-normal\">\r\n        Already have an account?{\" \"}\r\n        <a href=\"#\" className=\"font-medium text-gray-900\">\r\n        <Link to=\"/login\">Sign In</Link>\r\n        </a>\r\n      </Typography>\r\n    </form>\r\n  </Card>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Navbar\\NavbarIn.js",["65","66","67","68"],[],"import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Navbar,\r\n  MobileNav,\r\n  Typography,\r\n  Button,\r\n  Menu,\r\n  MenuHandler,\r\n  MenuList,\r\n  MenuItem,\r\n  Avatar,\r\n  Card,\r\n  IconButton,\r\n} from \"@material-tailwind/react\";\r\nimport {\r\n  CubeTransparentIcon,\r\n  UserCircleIcon,\r\n  CodeBracketSquareIcon,\r\n  Square3Stack3DIcon,\r\n  ChevronDownIcon,\r\n  Cog6ToothIcon,\r\n  InboxArrowDownIcon,\r\n  LifebuoyIcon,\r\n  PowerIcon,\r\n  RocketLaunchIcon,\r\n  Bars2Icon,\r\n  PlusCircleIcon,\r\n} from \"@heroicons/react/24/outline\";\r\n \r\n// profile menu component\r\nconst profileMenuItems = [\r\n  {\r\n    label: \"My Profile\",\r\n    icon: UserCircleIcon,\r\n  },\r\n  {\r\n    label: \"Edit Profile\",\r\n    icon: Cog6ToothIcon,\r\n  },\r\n  {\r\n    label: \"Inbox\",\r\n    icon: InboxArrowDownIcon,\r\n  },\r\n  {\r\n    label: \"Sign Out\",\r\n    icon: PowerIcon,\r\n  },\r\n];\r\n \r\nfunction ProfileMenu() {\r\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\r\n \r\n  const closeMenu = () => setIsMenuOpen(false);\r\n \r\n  return (\r\n    <Menu open={isMenuOpen} handler={setIsMenuOpen} placement=\"bottom-end\">\r\n      <MenuHandler>\r\n        <Button\r\n          variant=\"text\"\r\n          color=\"blue-gray\"\r\n          className=\"flex items-center gap-1 rounded-full py-0.5 pr-2 pl-0.5 lg:ml-auto\"\r\n        >\r\n          <Avatar\r\n            variant=\"circular\"\r\n            size=\"sm\"\r\n            alt=\"tania andrew\"\r\n            className=\"border border-gray-900 p-0.5\"\r\n            src=\"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1480&q=80\"\r\n          />\r\n          <ChevronDownIcon\r\n            strokeWidth={2.5}\r\n            className={`h-3 w-3 transition-transform ${\r\n              isMenuOpen ? \"rotate-180\" : \"\"\r\n            }`}\r\n          />\r\n        </Button>\r\n      </MenuHandler>\r\n      <MenuList className=\"p-1\">\r\n        {profileMenuItems.map(({ label, icon }, key) => {\r\n          const isLastItem = key === profileMenuItems.length - 1;\r\n          return (\r\n            <MenuItem\r\n              key={label}\r\n              onClick={closeMenu}\r\n              className={`flex items-center gap-2 rounded ${\r\n                isLastItem\r\n                  ? \"hover:bg-red-500/10 focus:bg-red-500/10 active:bg-red-500/10\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              {React.createElement(icon, {\r\n                className: `h-4 w-4 ${isLastItem ? \"text-red-500\" : \"\"}`,\r\n                strokeWidth: 2,\r\n              })}\r\n              <Typography\r\n                as=\"span\"\r\n                variant=\"small\"\r\n                className=\"font-normal\"\r\n                color={isLastItem ? \"red\" : \"inherit\"}\r\n              >\r\n                {label}\r\n              </Typography>\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </MenuList>\r\n    </Menu>\r\n  );\r\n}\r\n \r\n// nav list menu\r\nconst navListMenuItems = [\r\n  {\r\n    title: \"@material-tailwind/html\",\r\n    description:\r\n      \"Learn how to use @material-tailwind/html, packed with rich components and widgets.\",\r\n  },\r\n  {\r\n    title: \"@material-tailwind/react\",\r\n    description:\r\n      \"Learn how to use @material-tailwind/react, packed with rich components for React.\",\r\n  },\r\n  {\r\n    title: \"Material Tailwind PRO\",\r\n    description:\r\n      \"A complete set of UI Elements for building faster websites in less time.\",\r\n  },\r\n];\r\n \r\nfunction NavListMenu() {\r\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\r\n \r\n  const renderItems = navListMenuItems.map(({ title, description }) => (\r\n    <a href=\"#\" key={title}>\r\n      <MenuItem>\r\n        <Typography variant=\"h6\" color=\"blue-gray\" className=\"mb-1\">\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"small\" color=\"gray\" className=\"font-normal\">\r\n          {description}\r\n        </Typography>\r\n      </MenuItem>\r\n    </a>\r\n  ));\r\n \r\n  return (\r\n    <React.Fragment>\r\n      <Menu allowHover open={isMenuOpen} handler={setIsMenuOpen}>\r\n        <MenuHandler>\r\n          <Typography as=\"a\" href=\"#\" variant=\"small\" className=\"font-normal\">\r\n            <MenuItem className=\"hidden items-center gap-2 text-blue-gray-900 lg:flex lg:rounded-full\">\r\n              <Square3Stack3DIcon className=\"h-[18px] w-[18px]\" /> Pages{\" \"}\r\n              <ChevronDownIcon\r\n                strokeWidth={2}\r\n                className={`h-3 w-3 transition-transform ${\r\n                  isMenuOpen ? \"rotate-180\" : \"\"\r\n                }`}\r\n              />\r\n            </MenuItem>\r\n          </Typography>\r\n        </MenuHandler>\r\n        <MenuList className=\"hidden w-[36rem] grid-cols-7 gap-3 overflow-visible lg:grid\">\r\n          <Card\r\n            color=\"blue\"\r\n            shadow={false}\r\n            variant=\"gradient\"\r\n            className=\"col-span-3 grid h-full w-full place-items-center rounded-md\"\r\n          >\r\n            <RocketLaunchIcon strokeWidth={1} className=\"h-28 w-28\" />\r\n          </Card>\r\n          <ul className=\"col-span-4 flex w-full flex-col gap-1\">\r\n            {renderItems}\r\n          </ul>\r\n        </MenuList>\r\n      </Menu>\r\n      <MenuItem className=\"flex items-center gap-2 text-blue-gray-900 lg:hidden\">\r\n        <Square3Stack3DIcon className=\"h-[18px] w-[18px]\" /> Pages{\" \"}\r\n      </MenuItem>\r\n      <ul className=\"ml-6 flex w-full flex-col gap-1 lg:hidden\">\r\n        {renderItems}\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n \r\n// nav list component\r\nconst navListItems = [\r\n  {\r\n    label: \"Connect\",\r\n    icon: UserCircleIcon,\r\n  },\r\n  {\r\n    label: \"create\",\r\n    icon: PlusCircleIcon,\r\n  },\r\n  {\r\n    label: \"Docs\",\r\n    icon: CodeBracketSquareIcon,\r\n  },\r\n];\r\n \r\nfunction NavList() {\r\n  return (\r\n    <ul className=\"mb-4 mt-2 flex flex-col gap-2 lg:mb-0 lg:mt-0 lg:flex-row lg:items-center\">\r\n      <NavListMenu />\r\n      {navListItems.map(({ label, icon }, key) => (\r\n        <Typography\r\n          key={label}\r\n          as=\"a\"\r\n          href=\"#\"\r\n          variant=\"small\"\r\n          color=\"blue-gray\"\r\n          className=\"font-normal\"\r\n        >\r\n          <MenuItem className=\"flex items-center gap-2 lg:rounded-full\">\r\n            {React.createElement(icon, { className: \"h-[18px] w-[18px]\" })}{\" \"}\r\n            {label}\r\n          </MenuItem>\r\n        </Typography>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n \r\nexport default function ComplexNavbar() {\r\n  const [isNavOpen, setIsNavOpen] = React.useState(false);\r\n \r\n  const toggleIsNavOpen = () => setIsNavOpen((cur) => !cur);\r\n \r\n  React.useEffect(() => {\r\n    window.addEventListener(\r\n      \"resize\",\r\n      () => window.innerWidth >= 960 && setIsNavOpen(false),\r\n    );\r\n  }, []);\r\n \r\n  return (\r\n    <Navbar className=\"mx-auto max-w-screen-xl p-2 lg:rounded-full lg:pl-6\">\r\n      <div className=\"relative mx-auto flex items-center text-blue-gray-900\">\r\n        <Typography\r\n          as=\"a\"\r\n          href=\"#\"\r\n          className=\"mr-4 ml-2 cursor-pointer py-1.5 font-medium\"\r\n        >\r\n          Thinxpot\r\n        </Typography>\r\n        <div className=\"absolute top-2/4 left-2/4 hidden -translate-x-2/4 -translate-y-2/4 lg:block\">\r\n          <NavList />\r\n        </div>\r\n        <IconButton\r\n          size=\"sm\"\r\n          color=\"blue-gray\"\r\n          variant=\"text\"\r\n          onClick={toggleIsNavOpen}\r\n          className=\"ml-auto mr-2 lg:hidden\"\r\n        >\r\n          <Bars2Icon className=\"h-6 w-6\" />\r\n        </IconButton>\r\n        <ProfileMenu />\r\n      </div>\r\n      <MobileNav open={isNavOpen} className=\"overflow-scroll\">\r\n        <NavList />\r\n      </MobileNav>\r\n    </Navbar>\r\n  );\r\n}","C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\pages\\home\\Home.js",[],[],"C:\\Users\\luhar\\Documents\\FullStack\\APP3\\client\\src\\components\\Posts\\PostDetail.js",["69","70","71","72","73","74","75"],[],{"ruleId":"76","severity":1,"message":"77","line":3,"column":50,"nodeType":"78","messageId":"79","endLine":3,"endColumn":54},{"ruleId":"76","severity":1,"message":"80","line":9,"column":3,"nodeType":"78","messageId":"79","endLine":9,"endColumn":7},{"ruleId":"81","severity":1,"message":"82","line":30,"column":9,"nodeType":"83","endLine":30,"endColumn":51},{"ruleId":"76","severity":1,"message":"84","line":12,"column":17,"nodeType":"78","messageId":"79","endLine":12,"endColumn":25},{"ruleId":"76","severity":1,"message":"85","line":13,"column":20,"nodeType":"78","messageId":"79","endLine":13,"endColumn":31},{"ruleId":"76","severity":1,"message":"86","line":15,"column":9,"nodeType":"78","messageId":"79","endLine":15,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":79,"column":13,"nodeType":"83","endLine":82,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":94,"column":9,"nodeType":"83","endLine":94,"endColumn":59},{"ruleId":"76","severity":1,"message":"87","line":12,"column":16,"nodeType":"78","messageId":"79","endLine":12,"endColumn":23},{"ruleId":"76","severity":1,"message":"84","line":13,"column":17,"nodeType":"78","messageId":"79","endLine":13,"endColumn":25},{"ruleId":"76","severity":1,"message":"85","line":14,"column":20,"nodeType":"78","messageId":"79","endLine":14,"endColumn":31},{"ruleId":"76","severity":1,"message":"88","line":16,"column":9,"nodeType":"78","messageId":"79","endLine":16,"endColumn":23},{"ruleId":"81","severity":1,"message":"82","line":87,"column":13,"nodeType":"83","endLine":90,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":102,"column":9,"nodeType":"83","endLine":102,"endColumn":59},{"ruleId":"76","severity":1,"message":"77","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"76","severity":1,"message":"89","line":17,"column":3,"nodeType":"78","messageId":"79","endLine":17,"endColumn":22},{"ruleId":"76","severity":1,"message":"90","line":24,"column":3,"nodeType":"78","messageId":"79","endLine":24,"endColumn":15},{"ruleId":"81","severity":1,"message":"82","line":135,"column":5,"nodeType":"83","endLine":135,"endColumn":29},{"ruleId":"76","severity":1,"message":"91","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"92","line":1,"column":28,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"82","line":21,"column":17,"nodeType":"83","endLine":21,"endColumn":58},{"ruleId":"81","severity":1,"message":"82","line":48,"column":33,"nodeType":"83","endLine":48,"endColumn":194},{"ruleId":"81","severity":1,"message":"82","line":54,"column":33,"nodeType":"83","endLine":54,"endColumn":194},{"ruleId":"81","severity":1,"message":"82","line":60,"column":33,"nodeType":"83","endLine":60,"endColumn":194},{"ruleId":"81","severity":1,"message":"82","line":65,"column":33,"nodeType":"83","endLine":65,"endColumn":194},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'handleLogin' is assigned a value but never used.","'setName' is assigned a value but never used.","'handleRegister' is assigned a value but never used.","'CubeTransparentIcon' is defined but never used.","'LifebuoyIcon' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used."]