{"ast":null,"code":"// import React from 'react'\n\n// function Home() {\n//     const home = {\n//         textAlign: 'center',\n//         marginTop: '100px'\n//     }\n//   return (\n//     <>\n//     <div>\n//         <h2 style={home}>Home</h2>\n//     </div>\n//     </>\n//   )\n// }\n\n// export default Home\n// import React from \"react\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import axios from \"axios\";\n\n// const sampleObjects = [];\n\n//   for (let i = 1; i <= 50; i++) {\n//     sampleObjects.push({\n//       title: 'Sample Title ' + (i + 1),\n//       content: 'Sample content for object ' + (i + 1),\n//       username: 'sample_user_' + (i + 1),\n//       createdAt: '2023-03-' + (i + 1), // Assuming the date format stays the same\n//     });\n//   }\n\n// let page = 1;\n// const fetchData = (setItems, items) => {\n//  axios\n//    .get(`https://jsonplaceholder.typicode.com/photos?_page=${page}&_limit=10`)\n//    .then((res) => {\n//      setItems([...items, ...res.data]);\n//      page = page + 1;\n//    });\n// };\n\n// const refresh = (setItems) => {};\n\n// export default function Home() {\n//  const [items, setItems] = React.useState([]);\n\n//  React.useEffect(()=>{\n//    fetchData(setItems,items)\n//  },[])\n//  return (\n//    <InfiniteScroll\n//      dataLength={items.length} //This is important field to render the next data\n//      next={() => {\n//        fetchData(setItems, items);\n//      }}\n//      hasMore={true}\n//      loader={<h4>Loading...</h4>}\n//      endMessage={\n//        <p style={{ textAlign: \"center\" }}>\n//          <b>Yay! You have seen it all</b>\n//        </p>\n//      }\n//      // below props only if you need pull down functionality\n//      refreshFunction={refresh}\n//      pullDownToRefresh\n//      pullDownToRefreshThreshold={50}\n//      pullDownToRefreshContent={\n//        <h3 style={{ textAlign: \"center\" }}># 8595; Pull down to refresh</h3>\n//      }\n//      releaseToRefreshContent={\n//        <h3 style={{ textAlign: \"center\" }}># 8593; Release to refresh</h3>\n//      }\n//    >\n//      <div style={{ minHeight: \"100vh\" }}>\n//        {items.map((user) => (\n//          <img src={user.url} height=\"100px\" width=\"200px\" />\n//        ))}\n//      </div>\n//    </InfiniteScroll>\n//  );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/luhar/Documents/FullStack/APP3/client/src/pages/home/Home.js"],"sourcesContent":["// import React from 'react'\r\n\r\n// function Home() {\r\n//     const home = {\r\n//         textAlign: 'center',\r\n//         marginTop: '100px'\r\n//     }\r\n//   return (\r\n//     <>\r\n//     <div>\r\n//         <h2 style={home}>Home</h2>\r\n//     </div>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Home\r\n// import React from \"react\";\r\n// import InfiniteScroll from \"react-infinite-scroll-component\";\r\n// import axios from \"axios\";\r\n\r\n// const sampleObjects = [];\r\n\r\n//   for (let i = 1; i <= 50; i++) {\r\n//     sampleObjects.push({\r\n//       title: 'Sample Title ' + (i + 1),\r\n//       content: 'Sample content for object ' + (i + 1),\r\n//       username: 'sample_user_' + (i + 1),\r\n//       createdAt: '2023-03-' + (i + 1), // Assuming the date format stays the same\r\n//     });\r\n//   }\r\n\r\n// let page = 1;\r\n// const fetchData = (setItems, items) => {\r\n//  axios\r\n//    .get(`https://jsonplaceholder.typicode.com/photos?_page=${page}&_limit=10`)\r\n//    .then((res) => {\r\n//      setItems([...items, ...res.data]);\r\n//      page = page + 1;\r\n//    });\r\n// };\r\n \r\n// const refresh = (setItems) => {};\r\n \r\n// export default function Home() {\r\n//  const [items, setItems] = React.useState([]);\r\n \r\n//  React.useEffect(()=>{\r\n//    fetchData(setItems,items)\r\n//  },[])\r\n//  return (\r\n//    <InfiniteScroll\r\n//      dataLength={items.length} //This is important field to render the next data\r\n//      next={() => {\r\n//        fetchData(setItems, items);\r\n//      }}\r\n//      hasMore={true}\r\n//      loader={<h4>Loading...</h4>}\r\n//      endMessage={\r\n//        <p style={{ textAlign: \"center\" }}>\r\n//          <b>Yay! You have seen it all</b>\r\n//        </p>\r\n//      }\r\n//      // below props only if you need pull down functionality\r\n//      refreshFunction={refresh}\r\n//      pullDownToRefresh\r\n//      pullDownToRefreshThreshold={50}\r\n//      pullDownToRefreshContent={\r\n//        <h3 style={{ textAlign: \"center\" }}># 8595; Pull down to refresh</h3>\r\n//      }\r\n//      releaseToRefreshContent={\r\n//        <h3 style={{ textAlign: \"center\" }}># 8593; Release to refresh</h3>\r\n//      }\r\n//    >\r\n//      <div style={{ minHeight: \"100vh\" }}>\r\n//        {items.map((user) => (\r\n//          <img src={user.url} height=\"100px\" width=\"200px\" />\r\n//        ))}\r\n//      </div>\r\n//    </InfiniteScroll>\r\n//  );\r\n// }"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}